{"pages":[],"posts":[{"title":"ECS七天训练营 Day2","text":"Day 2 搭建wiki知识库 运行环境：LAMP运行环境（php版本必须在5.5以上） 安装MediaWiki连接主机，进入/data/wwwroot/default/目录 123456mkdir old ##新建文件夹cd old/wget https://releases.wikimedia.org/mediawiki/1.29/mediawiki-1.29.1.tar.gz ##下载mediawikitar -zxvf mediawiki-1.29.1.tar.gz ##解压文件mv ./mediawiki-1.29.1/* /data/wwwroot/default/ ##移动文件chown -R www /data/wwwroot/default 访问公网ip下的index.php，可以正常访问 配置MediaWiki 访问 http://ecs公网IP，页面如下图所示，点击 【set up the wiki】 一般情况下会根据系统语言自动设置为简体中文，如果没有就自行设置一下。 数据库选择 SQLite。 输入wiki名称和管理员账户。 可以选择【我已经不耐烦了，赶紧安装我的wiki】加快安装速度。 下载配置文件。 将下载的 LocalSettings.php 文件上传到根目录。 重新访问http://ecs公网ip，就可以访问wiki系统了。 MediaWiki安装完成，接下来就可以创建自己的页面了。","link":"/2020/08/07/ECS%E4%B8%83%E5%A4%A9%E8%AE%AD%E7%BB%83%E8%90%A5%20Day2/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/05/13/hello-world/"},{"title":"ECS七天训练营 Day1","text":"Day 1 打造专属云笔记安装Node.js 下载Node.js 13.9.0 64位安装包1wget https://npm.taobao.org/mirrors/node/v13.9.0/node-v13.9.0-linux-x64.tar.xz 创建Node.js安装⽬录1sudo mkdir -p /usr/local/lib/nodejs 解压到要安装⽬录1sudo tar -xJvf node-v13.9.0-linux-x64.tar.xz -C /usr/local/lib/nodejs 使⽤查看node.js版本号命令验证是否解压成功12cd /usr/local/lib/nodejs/node-v13.9.0-linux-x64/bin ##切换到安装文件夹./node -v 截图如下： ⾄此，nodejs安装完毕。 安装 VuePress 全局安装12npm config set registry https://registry.npm.taobao.org ##淘宝镜像加快安装速度npm install -g vuepress 创建⼀个⽂件夹作为⽬录12mkdir try_blogscd try_blogs 项⽬初始化1npm init -y 初始化后会⽣成⼀个package.json⽂件之后进⼊配置步骤。 配置 VuePress 设置package.json的脚本配置 1vim package.json 修改scripts中的内容如下：1234\"scripts\": { \"docs:dev\": \"vuepress dev docs\", \"docs:build\": \"vuepress build docs\"}, 截图如下： 在当前⽬录中创建⼀个⽂档⽬录1mkdir docs 创建.vuepress⽬录12cd docsmkdir .vuepress 新建⼀个md⽂件1echo '# Hello VuePress - first blog!' &gt;README.md 创建config.js配置⽂件12cd .vuepressecho &gt;config.js 创建public⽬录1mkdir public 完成后的⼯作⽬录如下：1234567try_blogs├─ docs //以后要在这⾥⾯写⽂章，直接在此⽂件夹下新建⽂件夹，然后再建md⽂档就⾏，链接会⾃动⽣成│ ├─ README.md // 这个将会是我们以后的⾸页│ └─ .vuepress // 这个⾥⾯会存放⼀些配置和组件│ └─ public // 静态⽂件存放地│ └─ config.js //配置⽂件，以后的所有配置基本都在这⾥写└─ package.json 回到try_blogs⽬录，执⾏命令1vuepress dev docs 12345注：VuePress中有两个命令:vuepress dev docs 命令运⾏本地服务，通过访问(http://localhost:8080)即可预览⽹站vuepress build docs 命令⽤来⽣成静态⽂件， 默认情况下， 放置在docs/.vuepress/dist⽬录中，当然你也可以在docs/.vuepress/config.js中的dest字段来修改默认存放⽬录。在这⾥将两个命令封装成脚本的⽅式，直接使⽤npm run docs:dev和npm run docs:build即可。 在浏览器中运⾏： http://ECS公⽹IP:8080 修改⾸页配置修改README.md⽂件，将原来的内容删除后，将以下内容拷贝进去1234567891011121314151617---home: trueheroText: Vue技术博客初试tagline: 项⽬目结构，关注讨论，每⽇日分享actionText: 每⽇日更更新 →actionLink: /testlink/features:- title: 项⽬目结构details: 以 Markdown 为中⼼心的项⽬目结构，以最少的配置帮助你专注于写作。- title: 关注讨论details: 享受 Vue + webpack 的开发体验，在 Markdown 中使⽤用 Vue 组件，同时可以使⽤用 Vue 来开发⾃自定义主题。- title: 每⽇日分享details: VuePress 为每个⻚页⾯面预渲染⽣生成静态的 HTML，同时在⻚页⾯面被加载的时候，将作为 SPA 运⾏行行。footer: LearnVueonECS Licensed | Copyright © 2020-present--- 浏览器刷新后显⽰效果如下图： ⾄此，完成了VuePress在阿⾥云ECS上的搭建和初步配置，更多VuePress的使⽤⽂档可参考VuePress官⽹。","link":"/2020/08/06/ECS%E4%B8%83%E5%A4%A9%E8%AE%AD%E7%BB%83%E8%90%A5%20Day1/"},{"title":"树莓派固定IP设置","text":"系统环境：Ubuntu 18.04netplan树莓派与电脑有线连接 快速开始修改网卡信息配置配置文件名称可能为50-cloud-init.yaml，也可能是01-network-card.yaml不知道具体哪个/etc/netplan内查看 1$ sudo nano /etc/netplan/50-cloud-init.yaml 打开配置文件，WiFi连接在wlan0里修改，网线连接在eth0里修改需要修改或添加的内容 12345dhcp4: false addresses: [192.168.1.200/24] gateway4: 192.168.1.1 nameservers: addresses: [192.168.1.1] WiFi连接修改完成如下 1234567891011121314151617#不可以用Tab代替空格network: ethernets: eth0: dhcp4: true optional: true version: 2 wifis: wlan0: #修改为无线网卡名称 dhcp4: false addresses: [192.168.1.200/24] gateway4: 192.168.1.1 nameservers: addresses: [8.8.8.8, 192.168.1.1] access-points: \"SSID NAME\": password: \"SSID PASSWORD\" 检查错误与更新网络设置123$ sudo netplan --debug try$ sudo netplan --debug generate$ sudo netplan --debug apply 自动断开ssh连接后，重新输入树莓派IP192.168.1.200连接树莓派 1$ ifconfig -a 123456eth0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt; mtu 1500lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt; mtu 65536wlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500 inet 192.168.1.200 netmask 255.255.255.0 broadcast 192.168.1.255 参考Ubuntu 18.04 LTS设置固定ip OTHERS树莓派WIFI设置","link":"/2020/07/24/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%9B%BA%E5%AE%9AIP%E8%AE%BE%E7%BD%AE/"},{"title":"树莓派WIFI设置","text":"系统环境：Ubuntu 18.04netplan树莓派与电脑有线连接 快速开始更新软件信息网络没设置好，也可以不更新 1$ sudo apt update 查看无线网卡名称1$ ifconfig -a 12345eth0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt; mtu 1500lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt; mtu 65536wlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500 无线网卡名称为wlan0 设置WIFI配置文件名称可能为50-cloud-init.yaml，也可能是01-network-card.yaml不知道具体哪个/etc/netplan内查看 1$ sudo nano /etc/netplan/50-cloud-init.yaml 打开配置文件 123456network: ethernets: eth0: dhcp4: true optional: true version: 2 添加以下内容 1234567##不可以用Tab代替空格 wifis: wlan0: #修改为无线网卡名称 dhcp4: true access-points: \"SSID NAME\": password: \"SSID PASSWORD\" 检查错误与更新网络设置123$ sudo netplan --debug try$ sudo netplan --debug generate$ sudo netplan --debug apply 1$ ifconfig -a 123456eth0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt; mtu 1500lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt; mtu 65536wlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500 inet 192.168.1.105 netmask 255.255.255.0 broadcast 192.168.1.255 获取ip地址，拔掉网线用新IP地址连接树莓派 参考Connect raspberry pi 4 with ubuntu server to wifiUbuntu Server 18.04配置无线Wifi网卡","link":"/2020/07/24/%E6%A0%91%E8%8E%93%E6%B4%BEWIFI%E8%AE%BE%E7%BD%AE/"},{"title":"ECS七天训练营 Day3","text":"Day 3 基于云服务器构建微信公众号管理系统 运行环境：LAMP环境（Ubuntu16.04 Apache PHP7.1）购买连接 环境配置与微擎安装 登录服务器 输入代码 然后按回车下一步1yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh 9b4e0b47 您想现在安装bt面板到www目录吗？ 输入y 然后按回车下一步 安装宝塔完毕，服务器会提示宝塔面板的管理登录地址，账号密码（用电脑的浏览器访问登录） 登录宝塔面板,和图片一样选，然后等候一小时左右即可安装完毕，可以宝塔后台的左上角看到任务安装列表 第4步安装完成后才能部署，不然无法部署 下载安装包，http://cdn.w7.cc/download/WeEngine-Laster-Online.zip解压出一个php文件，点击网站目录上传此文件。 访问 你的域名/install.php 安装，这里是s.w7.cc的账户，没有就去注册如果弹出这个请参考此教程 编辑PHP.INI 找到;always_populate_raw_post_data = -1 去掉前面的分号;如果=号后面是on ，改成-1 保存,重启php 弹出的内容对应填写 设置此后台的账户密码 ，安装成功 公众号添加与管理 更新一下系统，及时更新系统可以避免一些错误 添加需要管理的微信公众号 选择【手动添加公众号】 根据页面要求填写内容可以在微信公众号后台的这两个部分中查找所需要的信息。 有一步需要在微信公众号的后台添加开发者信息，将系统给出的 Token和 Key 复制到【基本配置】中即可这样就添加好公众号了，接下来我们测试一下公众号应用。 进入【应用市场】，挑选一款适合自己的公众号应用 回到网站，进入【未安装公众号应用】，安装一下刚刚购买的应用 返回添加好的公众号，就可以看到刚刚安装好的应用了 点击一个应用就可以进行设置或者扫二维码使用了","link":"/2020/08/08/ECS%E4%B8%83%E5%A4%A9%E8%AE%AD%E7%BB%83%E8%90%A5%20Day3/"},{"title":"ECS七天训练营 Day4","text":"Day 4 基于Aria2与Filemanager部署离线下载服务器 运行环境： 支持的操作系统：CentOS 7-8、Debian 8-10、Ubuntu 16-18 操作系统要求64位 远程管理软件说明与代码编辑器管理终端管理我们的服务器我们需要通过相关软件，针对Linux服务器的管理，这⾥推荐使⽤ Putty。PuTTY 是⾃由的跨平台 Telnet/SSH 客户端，同时在 Win32 和 Unix 系统下模拟 xterm 终端。其主要作者是 Simon Tatham。由 Larry Li维护并开源的中⽂版：下载地址：https://github.com/larryli/PuTTY/releases ⽂件传输推荐 Filezilla 通过 SFTP 协议进⾏本地和服务器的⽂件传输和管理。下载地址：https://filezilla-project.org/download.php?type=client 代码编辑可视化的 Visual Studio Code，可以更⾼效的进⾏代码编辑和管理。下载地址：https://code.visualstudio.com/Download CCAA安装CCAA原为CentOS + Caddy + AriaNg + Aria2，故命名为CCAA，不过现在已经不仅仅支持CentOS，包括主流的Debian、Ubuntu也已经支持，自2.0(2020/02/28)版本开始已移除Caddy，改用Golang写了一个简单的WebServer来运行AriaNg。作者博客 and Github 主要功能 支持HTTP/HTTPS/FTP/BT/磁力链接等离线下载，断点续传等 文件管理、视频在线播放 完善的帮助文档 一键安装脚本（使用root用户）：1234#海外bash &lt;(curl -Lsk https://raw.githubusercontent.com/helloxz/ccaa/master/ccaa.sh)#国内bash &lt;(curl -Lsk https://raw.githubusercontent.com/helloxz/ccaa/master/ccaa.sh) cdn 如果出现-bash: curl: command not found错误，说明curl命令没安装，请输入下面的命令先安装curl，再回过头来执行上面的命令再来一次。 1234#Debian or Ubuntuapt-get -y install curl#CentOSyum -y install curl 如果不出现错误，会看到下面的界面，根据提示输入1安装CCAA 安装过程中会要求设置下载路径（若不填写默认下载路径为/data/ccaaDown）和Aria2 RPC 密钥，密钥建议字母 + 数字组合，不要含有特殊字符，以免出现异常。 安装完毕后会提示访问地址、Aria2 RPC 密钥、File Browser 用户名、密码 访问地址默认为http://IP:6080 Aria2 RPC 密钥:您自行设置的 File Browser 用户名：默认为ccaa File Browser 密码：默认为admin Docker安装12345docker run --name=\"ccaa\" -d -p 6080:6080 -p 6081:6081 -p 6800:6800 -p 51413:51413 \\ -v /data/ccaaDown:/data/ccaaDown \\ -e PASS=\"xiaoz.me\" \\ helloz/ccaa \\ sh -c \"dccaa pass &amp;&amp; dccaa start\" 第一个/data/ccaaDown为本地目录，CCAA下载后的内容会保存在此目录，请根据自身情况设置 xiaoz.me为Aria2密钥，运行的时候请修改为自己的密码 文件管理默认用户名为ccaa，密码为admin，登录后可在后台修改 使用入门输入http://IP:6080访问AriaNg ，首次打开会提示“认证失败”，这个是正常现象。依次点击“AriaNg设置 - RPC - 填写您之前设置的RPC密钥” 左侧导航栏有一个“文件管理”菜单，是FileBrowser的入口地址，URL地址为http://IP:6081，初始用户名为：ccaa，密码为：admin，登录FileBrowser后请务必修改密码。 常用命令123456ccaa ##进入CCAA操作界面ccaa status ##查看CCAA运行状态ccaa stop ##停止CCAAccaa start ##启动CCAAccaa restart ##重启CCAAccaa -v ##查看CCAA版本（2.0开始支持） 注意事项 CCAA是从Github拉取资源，建议国外服务器使用，国内服务器可能安装速度非常缓慢或不成功 如果服务器有启用安全组，请务必在安全组放行以下端口：6080/6081/6800/6998/51413 大部分服务商是禁止下载BT的，若因违规使用导致服务器被封本人不承担任何责任 其它更多使用说明请参考帮助文档，在提出疑问之前建议先阅读一遍帮助文档，如果有什么建议或者问题欢迎留言反馈。 CCAA项目地址：https://github.com/helloxz/ccaa 帮助文档：https://www.yuque.com/helloz/ccaa","link":"/2020/08/09/ECS%E4%B8%83%E5%A4%A9%E8%AE%AD%E7%BB%83%E8%90%A5%20Day4/"}],"tags":[{"name":"Aliyun","slug":"Aliyun","link":"/tags/Aliyun/"},{"name":"ECS七天训练营","slug":"ECS七天训练营","link":"/tags/ECS%E4%B8%83%E5%A4%A9%E8%AE%AD%E7%BB%83%E8%90%A5/"},{"name":"Raspberry","slug":"Raspberry","link":"/tags/Raspberry/"}],"categories":[{"name":"2020年8月","slug":"2020年8月","link":"/categories/2020%E5%B9%B48%E6%9C%88/"},{"name":"2020年7月","slug":"2020年7月","link":"/categories/2020%E5%B9%B47%E6%9C%88/"}]}